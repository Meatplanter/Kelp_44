[gd_resource type="VisualShader" load_steps=9 format=3 uid="uid://dpbxqvx3peki4"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wa5hw"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_wa5hw"]
expanded_output_ports = [0]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ljctg"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(50, 25)]
op_type = 0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ljctg"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(10, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_h26ei"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4h8by"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_c0ael"]
default_input_values = [0, 0.0, 1, 10.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_1ymix"]
function = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;
	float n_out2p2 = n_out2p0.g;


// Input:5
	float n_out5p0 = TIME;


// FloatOp:10
	float n_in10p1 = 0.50000;
	float n_out10p0 = n_out5p0 * n_in10p1;


// FloatFunc:9
	float n_out9p0 = sin(n_out10p0);


// FloatOp:8
	float n_in8p1 = 10.00000;
	float n_out8p0 = n_out9p0 * n_in8p1;


// VectorCompose:6
	float n_in6p1 = 0.00000;
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out8p0, n_in6p1, n_in6p2);


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out2p2 - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out2p2 < n_in4p1)
	{
		n_out4p0 = n_out6p0;
	}
	else
	{
		n_out4p0 = n_in4p4;
	}


// VectorOp:3
	vec2 n_out3p0 = n_out2p0 + vec2(n_out4p0.xy);


// Output:0
	VERTEX = n_out3p0;


}
"
graph_offset = Vector2(-839.375, -67.8214)
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2(420, 160)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_wa5hw")
nodes/vertex/2/position = Vector2(-720, 0)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_ljctg")
nodes/vertex/3/position = Vector2(140, 40)
nodes/vertex/4/node = SubResource("VisualShaderNodeIf_ljctg")
nodes/vertex/4/position = Vector2(-220, 200)
nodes/vertex/5/node = SubResource("VisualShaderNodeInput_h26ei")
nodes/vertex/5/position = Vector2(-1560, 400)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorCompose_4h8by")
nodes/vertex/6/position = Vector2(-500, 380)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatOp_c0ael")
nodes/vertex/8/position = Vector2(-780, 380)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatFunc_1ymix")
nodes/vertex/9/position = Vector2(-1020, 380)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatOp_wa5hw")
nodes/vertex/10/position = Vector2(-1280, 340)
nodes/vertex/connections = PackedInt32Array(3, 0, 0, 0, 2, 0, 3, 0, 2, 2, 4, 0, 4, 0, 3, 1, 6, 0, 4, 5, 9, 0, 8, 0, 8, 0, 6, 0, 5, 0, 10, 0, 10, 0, 9, 0)
